name: Deploy Processor Node

on:
  push:
    branches:
      - master
    paths:
      - 'apps/processor-node/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1. Забираем код
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2. Настраиваем Buildx для Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Аутентифицируемся в GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 4. Указываем проект и регион
      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud config set run/region us-central1

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker --quiet

      # 5. Строим и пушим образ в GCR
      - name: Build & Push Docker image
        run: |
          cd apps/processor-node
          docker build \
            --tag gcr.io/${{ secrets.GCP_PROJECT }}/musicvis-processor-node:latest \
            .
          docker push gcr.io/${{ secrets.GCP_PROJECT }}/musicvis-processor-node:latest

      # 6. Деплоим на Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy processor-node \
            --image gcr.io/${{ secrets.GCP_PROJECT }}/musicvis-processor-node:latest \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars GCS_BUCKET=${{ secrets.GCP_PROJECT }}.firebasestorage.app

      - name: Send Discord notification
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"NEW! [VideoMaker][Processor] deployed! Commit: $LAST_COMMIT_MESSAGE\"}" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}